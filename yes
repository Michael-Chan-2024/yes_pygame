import pygame 
import random as rand
from pygame.locals import (
    K_UP, 
    K_DOWN, 
    K_LEFT, 
    K_RIGHT,
    K_ESCAPE,
    K_f,
    QUIT,
    KEYDOWN
)

class Player(pygame.sprite.Sprite):
    def __init__(self) -> None:
        super(Player, self).__init__()
        self.surf = pygame.Surface((50,50))
        self.rect = self.surf.get_rect()
        self.state = 0
        self.r = 255
        self.g = 0
        self.b = 0
        self.move_speed = 2
    def rainbow_effect(self):
        match (self.state):
            case 0:
                self.g += 1
                if self.g == 255:
                    self.state = 1
            case 1:
                self.r -= 1
                if self.r == 0:
                    self.state = 2
            case 2:
                self.b += 1
                if self.b == 255:
                    self.state = 3
            case 3:
                self.g -= 1
                if self.g == 0:
                    self.state = 4
            case 4:
                self.r += 1
                if self.r == 255:
                    self.state = 5
            case 5:
                self.b -= 1
                if self.b == 0:
                    self.state = 0
        self.surf.fill((self.r, self.g, self.b))
    def get_pos(self):
        return self.rect.x, self.rect.y

    # def fire(self):
    #     projectile = Projectile()
    #     projectile.update()
    #     print("god")

    def update(self, pressed_keys):
        if pressed_keys[K_UP]:
            self.rect.move_ip(0, -1 * self.move_speed)
        if pressed_keys[K_DOWN]:
            self.rect.move_ip(0, 1 * self.move_speed)
        if pressed_keys[K_LEFT]:
            self.rect.move_ip(-1 * self.move_speed, 0)
        if pressed_keys[K_RIGHT]:
            self.rect.move_ip(1 * self.move_speed, 0)
        if pressed_keys[K_f]:
            self.fire()
        if self.rect.left < 0 - 50:
            self.rect.left = 1920
        if self.rect.top <  0 - 50:
            self.rect.top = 1080
        if self.rect.left > 1920 + 50:
            self.rect.left = 0
        if self.rect.top > 1080 + 50:
            self.rect.top = 0


class Enemy(pygame.sprite.Sprite):
    def __init__(self) -> None:
        super(Enemy, self).__init__()
        self.surf = pygame.Surface((75, 75))
        self.surf.fill((255,0,0))
        self.rect = self.surf.get_rect(
            center=(rand.randint(SCREEN_WIDTH + 75, SCREEN_WIDTH + 150), 
                    rand.randint(0, SCREEN_HEIGHT + 100))
        )
        self.speed = rand.randint(1,2)
    def update(self, player_x, player_y):
        self.rect.move_ip(-1 * self.speed, 0)
        if self.rect.right < 0:
            self.kill()
       
        
        

# class Projectile(Player):
#     def __init__(self) -> None:
#         super(Player, self).__init__()
#         self.surf = pygame.Surface((10, 10)) 
#         self.rect = self.surf.get_rect()
#     def update(self):
#         if self.rect.left < 0 - 50:
#             self.rect.left = 1920
#         if self.rect.top <  0 - 50:
#             self.rect.top = 1080
#         if self.rect.left > 1920 + 50:
#             self.rect.left = 0
#         if self.rect.top > 1080 + 50:
#             self.rect.top = 0
#         self.rect.move_ip(0, 1)
        
        

pygame.init()

SCREEN_WIDTH = 1920
SCREEN_HEIGHT = 1080
running = True

screen = pygame.display.set_mode([SCREEN_WIDTH, SCREEN_HEIGHT])

player = Player()

#groups
enemies = pygame.sprite.Group()
all_sprites = pygame.sprite.Group()
all_sprites.add(player)

#custom event
ADD_ENEMY = pygame.USEREVENT + 1
pygame.time.set_timer(ADD_ENEMY, 250)

while running:
    for event in pygame.event.get():
        if event.type == KEYDOWN:
            if event.key == K_ESCAPE:
                running = False
        elif event.type == QUIT:
            running = False
        elif event.type == ADD_ENEMY:
            new_enemy = Enemy()
            enemies.add(new_enemy)
            all_sprites.add(new_enemy)

    pressed_keys = pygame.key.get_pressed()   
    player.update(pressed_keys)
    player.rainbow_effect()

    enemies.update(player.get_pos()[0], player.get_pos()[1])
    print(player.get_pos()[1])
    screen.fill((0,0,0))

    for entity in all_sprites:
        screen.blit(entity.surf, entity.rect)

    pygame.display.flip()

        